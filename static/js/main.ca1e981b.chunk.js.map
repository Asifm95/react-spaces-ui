{"version":3,"sources":["containers/Main/Main.tsx","model/navdata.ts","icons/Search.tsx","store/reducer.ts","store/store.tsx","utils/animation.ts","utils/variants.ts","components/Nav/Nav.tsx","ui/CardInfo/Info.tsx","icons/Close.tsx","ui/CloseBtn/CloseBtn.tsx","ui/CardImage/CardImage.tsx","components/MotionSlider/Context.tsx","components/InnerCard/InnerCard.tsx","components/MotionSlider/Track.tsx","components/MotionSlider/index.tsx","containers/Details/Detail.tsx","components/Card/Card.tsx","utils/use-inverted-scale.ts","utils/flickity-conf.ts","icons/Diamonds.tsx","icons/Folder.tsx","icons/Inbox.tsx","icons/User.tsx","components/TabBar/TabBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["flickityRef","navData","title","href","Search","props","viewBox","width","height","d","data-original","className","data-old_color","fill","reducer","state","action","type","route","path","payload","prev","isSelected","selectedIndex","slide","showNavBar","initialState","store","createContext","Provider","StateProvider","children","useReducer","dispatch","value","section","style","gridTemplateRows","openSpring","stiffness","damping","closeSpring","closeInertial","tabBarVariants","hidden","y","opacity","visible","navBarVariants","closeBtnVariants","transition","delay","duration","infoWrapperVariants","flicktyVariants","x","ImageVariants","Nav","selected","useContext","console","log","nav","initial","animate","variants","map","n","i","key","InfoWrapper","div","exit","TitleWrapper","exitBeforeEnter","Info","description","isDescTitle","thumbs","animation","content","sub","count","thumb","src","image","alt","name","Path","strokeWidth","stroke","strokeLinecap","CloseBtn","close","button","onClick","CardImage","bgImage","imgRef","inverted","useInvertedScale","originX","originY","img","ref","sliderContext","ContextProvider","items","activeItem","doneAnimation","item","InnerCard","animationState","useRef","useEffect","current","getBoundingClientRect","bg_image","Track","controls","useAnimation","start","drag","dragConstraints","left","right","onAnimationComplete","MotionSlider","Detail","id","params","space","spaces","infoProps","slides","fontSize","letterSpacing","color","Card","memo","onScroll","translateX","navBarToggle","zIndex","useMotionValue","radius","scaleX","scaleY","borderRadius","updateRadius","latestX","get","latestY","xRadius","yRadius","set","unsubScaleX","onChange","unsubScaleY","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","useInvertedBorderRadius","transform","layoutTransition","onUpdate","latest","Math","round","face_thumbs","to","next","flickityOptions","initialIndex","imagesLoaded","cellAlign","pageDots","prevNextButtons","lazyLoad","draggable","imgRefList","scrollHandler","push","length","on","e","forEach","offset","flkityParallaxOnScroll","Main","match","history","useState","setX","SelectedIndex","setSelectedIndex","navBarToggleObs","Subject","navBarTogglehandler","closeHandler","isDraggable","eventHandler","BehaviorSubject","unSub","pipe","debounceTime","subscribe","v","replace","calcX","off","unsubscribe","event","target","index","first","elementType","options","isDetail","MainRoute","basename","component","Logo","Folder","Inbox","User","TabBar","overflow","Diamonds","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","orientation","navigator","userAgent","indexOf","vh","innerHeight","documentElement","setProperty","addEventListener","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"msJAcIA,E,iCCdSC,G,kBAAU,CACrB,CAAEC,MAAO,SAAUC,KAAM,KACzB,CAAED,MAAO,aAAcC,KAAM,KAC7B,CAAED,MAAO,SAAUC,KAAM,KACzB,CAAED,MAAO,YAAaC,KAAM,OCUfC,EAZA,SAAAC,GAAK,OAClB,qCAAKC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,IAAQH,GACpD,wBACEI,EAAE,8cACFC,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,c,sBC4BEC,EAAmC,SAACC,EAAOC,GACtD,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,eACFF,EADL,CAEEG,MAAM,eACDH,EAAMG,MADN,CAEHC,KAAMH,EAAOI,QACbC,KAAMN,EAAMG,MAAMC,SAGxB,IAAK,iBAAL,MACwCH,EAAOI,QAArCE,EADV,EACUA,WAAYC,EADtB,EACsBA,cACpB,OAAO,eACFR,EADL,CAEES,MAAM,eACDT,EAAMS,MADN,CAEHF,aACAC,oBAGN,IAAK,gBACH,OAAO,eACFR,EADL,CAEEU,WAAYT,EAAOI,UAGvB,QACE,OAAOL,IC5DPW,EAAsB,CAC1BR,MAAO,GACPM,MAAO,CACLF,YAAY,EACZC,cAAe,GAEjBE,YAAY,GAERE,EAAQC,wBAAc,IACpBC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,qBAAWlB,EAASY,GADR,mBAC/BX,EAD+B,KACxBkB,EADwB,KAEtC,OACE,kBAACJ,EAAD,CAAUK,MAAO,CAAEnB,QAAOkB,aACxB,kBAAC,IAAOE,QAAR,CACExB,UAAU,gBACVyB,MAAO,CACLC,iBAAmBtB,EAAMU,WAAP,0DAKnBM,KClBIO,EAAa,CACxBrB,KAAM,SACNsB,UAAW,IACXC,QAAS,IAEEC,EAAc,CACzBxB,KAAM,SACNsB,UAAW,IACXC,QAAS,IAEEE,EAAgB,CAC3BzB,KAAM,SACNsB,UAAW,IACXC,QAAS,ICnBEG,EAA2B,CACtCC,OAAQ,CACNC,EAAG,IACHC,QAAS,GAEXC,QAAS,CACPF,EAAG,EACHC,QAAS,IAIAE,EAA2B,CACtCJ,OAAQ,CACNC,GAAI,KAENE,QAAS,CAAEF,EAAG,IAGHI,EAA6B,CACxCL,OAAQ,CACNE,QAAS,EACTD,GAAI,KAENE,QAAS,CAAEF,EAAG,EAAGC,QAAS,EAAGI,WAAY,CAAEC,MAAO,GAAKC,SAAU,MAGtDC,EAAgC,CAC3CT,OAAQ,CAAEE,QAAS,GACnBC,QAAS,CACPD,QAAS,EACTI,WAAY,CAAEC,MAAO,MAYZG,EAA4B,CACvCV,OAAQ,CACNE,QAAS,EACTS,EAAG,QAELR,QAAS,CAAED,QAAS,EAAGS,EAAG,EAAGL,WAAY,CAAEC,MAAO,GAAKC,SAAU,MAGtDI,EAA0B,CACrCZ,OAAQ,CACNpC,OAAQ,KAEVuC,QAAS,CAAEvC,OAAQ,MChBNiD,EAjCH,SAAC,GAAsB,IAAD,IAAnBC,gBAAmB,MAAR,EAAQ,EACxB3C,EAAU4C,qBAAWhC,GAArBZ,MAGR,OAFA6C,QAAQC,IAAI,eAAgB9C,EAAMU,YAGhC,kBAAC,IAAOqC,IAAR,CACEC,QAAQ,QACRC,QAAUjD,EAAMU,WAAwB,UAAX,SAC7ByB,WAAanC,EAAMU,WAA0BgB,EAAbH,EAChC2B,SAAUjB,GAEV,wBAAIrC,UAAU,iBACXV,EAAQiE,KAAI,SAACC,EAAGC,GAAJ,OACX,wBACEC,IAAKD,EACLzD,UAAS,mBAAcyD,IAAMV,EAAW,aAAe,KAEvD,uBACE/C,UAAS,mBAAcyD,IAAMV,EAAW,kBAAoB,IAC5DvD,KAAMgE,EAAEhE,MAEPgE,EAAEjE,WAIT,wBAAIS,UAAU,YACZ,kBAAC,EAAD,U,uEC7BJ2D,G,YAAc,SAACjE,GAAD,OAClB,yBAAKM,UAAU,qBACb,kBAAC,IAAO4D,IAAR,CACE5D,UAAU,YACVsD,SAAUZ,EACVU,QAAS,SACTC,QAAS,UACTQ,KAAM,UAELnE,EAAM0B,aAKP0C,EAAe,SAACpE,GAAD,OACnB,yBAAKM,UAAU,mBACb,kBAAC,IAAD,CAAiB+D,iBAAe,GAAErE,EAAM0B,YA2C7B4C,EAvC2B,SAAC,GAOpC,IANLzE,EAMI,EANJA,MACA0E,EAKI,EALJA,YACAxC,EAII,EAJJA,MAII,IAHJyC,mBAGI,aAFJC,cAEI,MAFK,KAEL,EADJC,EACI,EADJA,UAEMC,EACJ,oCACE,kBAAC,IAAOT,IAAQQ,EACd,wBAAIpE,UAAU,aAAayB,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOlC,OACtCA,GAEH,yBAAKS,UAAU,WAAWyB,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAO6C,KAAxC,iBACML,QADN,IACMA,OADN,EACMA,EAAaM,MADnB,mBAC4BN,QAD5B,IAC4BA,OAD5B,EAC4BA,EAAa3D,MADzC,OAEI2D,IAA0B,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaM,OAAQ,GAAK,SAI5CJ,GACDA,EAAOZ,KACL,SAACiB,EAAOf,GAAR,OACEA,EAAI,GACF,0BAAMzD,UAAW,0BAA4ByD,EAAGC,IAAKD,GACnD,yBAAKgB,IAAKD,EAAME,MAAOC,IAAKH,EAAMI,YAOhD,OAAQV,EAGN,kBAAC,EAAD,KAAeG,GAFf,kBAAC,EAAD,KAAcA,I,gBC9CHQ,EAVF,SAACnF,GAAD,OACX,gBAAC,IAAOc,KAAR,eACEN,KAAK,cACL4E,YAAY,IACZC,OAAO,6BACPC,cAAc,SACVtF,KCmBOuF,G,MArBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,gBAAC,IAAD,CAAiBnB,iBAAe,GAC9B,gBAAC,IAAOoB,OAAR,CACEC,QAASF,EACTlF,UAAU,QACVsD,SAAUhB,EACVc,QAAS,SACTC,QAAS,UACTQ,KAAM,SACNtB,WAAYR,GAEZ,uBAAKnC,MAAM,KAAKC,OAAO,KAAKF,QAAQ,aAClC,gBAAC,EAAD,CAAMG,EAAE,sBACR,gBAAC,EAAD,CAAMA,EAAE,6BCcHuF,G,MA5BqC,SAAC,GAK9C,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,OAGI,IAFJ5E,kBAEI,aADJ0C,eACI,SACEmC,EAAWC,cAEjB,OACE,kBAAC,IAAO7B,IAAR,CACE5D,UAAU,aACVyB,MAAK,eAAO+D,EAAP,CAAiBE,QAAS,EAAGC,QAAS,IAC3CrC,SAAUT,EACVQ,QAASA,EAAU,UAAY1C,EAAa,SAAW,UACvD4B,WAAY5B,EAAagB,EAAaG,GAEtC,kBAAC,IAAO8D,IAAR,CAEEnB,IAAKa,EACLX,IAAI,GACJkB,IAAKN,EACLnC,SAAS,EACTb,WAAYT,O,gBCZPgE,EAAgB7E,wBAAc,IAE9B8E,EAAkB,SAAC,GAAkB,IAAhB3E,EAAe,EAAfA,SAC1BL,EAAe,CACnBiF,MAAO,GACPC,WAAY,EACZC,eAAe,GAJ8B,MA6BrB7E,sBAtB1B,SAAiBjB,EAAeC,GAC9B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,eACFF,EADL,CAEE4F,MAAM,GAAD,mBAAM5F,EAAM4F,OAAZ,CAAmB3F,EAAO8F,SAEnC,IAAK,kBACH,OAAO,eACF/F,EADL,CAEE6F,WAAY5F,EAAO4F,aAEvB,IAAK,sBACH,OAAO,eACF7F,EADL,CAEE8F,cAAe7F,EAAO6F,gBAE1B,QACE,OAAOnF,KAIiCA,GA7BC,mBA6BxCX,EA7BwC,KA6BjCkB,EA7BiC,KA+B/C,OACE,kBAACwE,EAAc5E,SAAf,CAAwBK,MAAO,CAAEnB,QAAOkB,aACrCF,ICjBQgF,EA5B+B,SAAC,GAAe,IAAbvF,EAAY,EAAZA,MAAY,EAC/BmC,qBAAW8C,GAA/B1F,EADmD,EACnDA,MAAOkB,EAD4C,EAC5CA,SACT+E,EAAiBjG,EAAM8F,cACvBL,EAAMS,iBAAuB,MASnC,OAPAC,qBAAU,WACR,GAAIV,GAAOA,EAAIW,SAAWH,EAAgB,CACxCpD,QAAQC,IAAI2C,EAAIW,SAChB,IAAM5D,EAAIiD,EAAIW,QAAQC,wBAAwB7D,EAC9CtB,EAAS,CAAEhB,KAAM,WAAY6F,KAAMvD,EAAI,SAExC,CAACyD,EAAgB/E,IAElB,yBAAKtB,UAAU,iBAAiB6F,IAAKA,GACnC,yBAAK7F,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAWsF,QAAO,OAAEzE,QAAF,IAAEA,OAAF,EAAEA,EAAO6F,SAAUrD,SAAS,IAC9C,kBAAC,EAAD,CACE9D,MAAOsB,EAAMtB,MACb0E,YAAapD,EAAMoD,YACnBxC,MAAO,SC6CJkF,EAlED,SAAC,GAAkB,IAAhBvF,EAAe,EAAfA,SAAe,EACF4B,qBAAW8C,GAA/B1F,EADsB,EACtBA,MAAOkB,EADe,EACfA,SACTsF,EAAWC,cACXrB,EAAWC,cACjBxC,QAAQC,IAAI9C,EAAM4F,OACI5F,EAAM4F,MAAMzC,KAAI,SAAC4C,GAAD,OAAkB,EAARA,KAEhDI,qBAAU,WACRK,EAASE,MAAM,aACd,CAACF,IAmCJ,OACE,kBAAC,IAAOhD,IAAR,CACE5D,UAAU,qBACVsD,SAAUX,EACVoE,KAAM,IAENC,gBAAiB,CACfC,MAAQ,IAAO,IACfC,MAAO,GAETzF,MAAK,eAAO+D,GACZpC,QAAS,SACTC,QAAS,UACTQ,KAAM,SACNtB,WAAYZ,EACZwF,oBAhDe,WACjB7F,EAAS,CAAEhB,KAAM,sBAAuB4F,eAAe,MAiDpD9E,ICvDQgG,EARM,SAAC,GAAkB,IAAhBhG,EAAe,EAAfA,SACtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAQA,KC2BCiG,EAtBA,SAAC,GAAe,IAAD,IAAZnC,EAAY,EAAZA,MAEVoC,EAAE,oBADUtE,qBAAWhC,GAAOZ,MAA5BG,MACSC,YAAT,aAAG,EAAY+G,OAAOD,UAAtB,QAA4B,EAC9BE,EAAQC,EAAOH,GAErB,OACE,oCACE,kBAAC,EAAD,CAAUpC,MAAOA,IACjB,kBAAC,EAAD,eACE3F,MAAK,OAAEiI,QAAF,IAAEA,OAAF,EAAEA,EAAOjI,MACd0E,YAAW,OAAEuD,QAAF,IAAEA,OAAF,EAAEA,EAAOvD,aAChByD,IAEN,kBAAC,EAAD,KACGD,EAAOH,GAAIK,OAAOpE,KAAI,SAAC1C,EAAc4C,GAAf,OACrB,kBAAC,EAAD,CAAW5C,MAAO2G,EAAMG,OAAOlE,GAAIC,IAAKD,UAS5CiE,EAA+B,CACnCjG,MAAO,CACLlC,MAAO,CACLqI,SAAU,GACVC,cAAe,GACfC,MAAO,WAETxD,IAAK,CACHsD,SAAU,GACVzF,QAAS,KAGb+B,aAAa,EACbE,UAAW,CACTd,SVZkC,CACpCrB,OAAQ,CACNE,QAAS,EACTD,EAAG,IAELE,QAAS,CAAEF,EAAG,EAAGC,QAAS,EAAGI,WAAY,CAAEE,SAAU,GAAKD,MAAO,MUQ/DY,QAAS,SACTC,QAAS,UACTQ,KAAM,SACNtB,WAAYR,IC4CDgG,EAtFkBC,gBAC/B,YAQO,IAPLR,EAOI,EAPJA,MAOI,IANJ7G,kBAMI,SALJsH,EAKI,EALJA,SACAC,EAII,EAJJA,WACAtH,EAGI,EAHJA,cACAuH,EAEI,EAFJA,aACAjD,EACI,EADJA,MAEQ5D,EAAa0B,qBAAWhC,GAAxBM,SACFiE,EAASe,iBAAO,MAChB8B,EAASC,YAAe1H,EAAa,EAAI,GACzC6E,ECtB6B,SAAC8C,GACtC,IAAMC,EAASF,YAAe,GACxBG,EAASH,YAAe,GACxB7C,EAAWC,YAAiB,CAAE8C,SAAQC,WACtCC,EAAeJ,YAAe,GAAD,OAAIC,EAAJ,OAqBnC,OAnBA/B,qBAAU,WACR,SAASmC,IACP,IAAMC,EAAUnD,EAAS+C,OAAOK,MAC1BC,EAAUrD,EAASgD,OAAOI,MAC1BE,EAAUH,EAAUL,EAAS,KAC7BS,EAAUF,EAAUP,EAAS,KAEnCG,EAAaO,IAAb,UAAoBF,EAApB,YAA+BC,IAGjC,IAAME,EAAczD,EAAS+C,OAAOW,SAASR,GACvCS,EAAc3D,EAASgD,OAAOU,SAASR,GAE7C,OAAO,WACLO,IACAE,OAED,CAACb,EAAQG,EAAcjD,EAAS+C,OAAQ/C,EAASgD,SAE7C,CACLD,SACAC,SACAY,oBAAqBX,EACrBY,qBAAsBZ,EACtBa,uBAAwBb,EACxBc,wBAAyBd,GDTRe,CAAwB7I,EAAa,EAAI,IAE1D4F,qBAAU,WACR0B,EAAS1C,EAAOiB,WACf,CAACyB,IAEJ1B,qBAAU,WACRjF,EAAS,CACPhB,KAAM,iBACNG,QAAS,CAAEE,aAAYC,qBAExB,CAACU,EAAUX,EAAYC,IAiB1B,OACE,kBAAC,IAAOgD,IAAR,CAAY5D,UAAU,kBACpB,kBAAC,IAAO4D,IAAR,CACE5D,UAAS,eAAUW,GAAc,QACjCc,MAAO,CACLgI,UAAW9I,EAAU,sBAAkB,EAAIuH,EAAtB,MAAuC,KAG9D,kBAAC,IAAOtE,IAAR,CACE5D,UAAU,eACVyB,MAAK,eAAO+D,EAAP,CAAiB4C,WACtBsB,iBAAkB/I,EAAagB,EAAaG,EAC5C6H,SA3BY,SAACC,GACnB,IAAMrB,EAASsB,KAAKC,MAAsB,IAAhBF,EAAOrB,QAAgB,IAC7C5H,GACFyH,EAAOY,IAAI,GACXb,GAAa,MAERxH,GAAc4H,EAAS,MAC1BH,EAAOY,IAAI,GAETT,EAAS,KAAOA,EAAS,GAC3BJ,GAAa,MAmBX,kBAAC,EAAD,CACE7C,QAAO,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAOd,SAChB/F,WAAYA,EACZ4E,OAAQA,EACRlC,SAAS,IAEV1C,EACC,kBAAC,EAAD,CAAQuE,MAAOA,IAEf,kBAAC,EAAD,CACE3F,MAAK,OAAEiI,QAAF,IAAEA,OAAF,EAAEA,EAAOjI,MACd0E,YAAW,OAAEuD,QAAF,IAAEA,OAAF,EAAEA,EAAOvD,YACpBE,OAAM,OAAEqD,QAAF,IAAEA,OAAF,EAAEA,EAAOuC,YACftI,MAAO,GACP2C,UAAW,QAKjBzD,GAAcC,GAAiB4G,GAC/B,kBAAC,IAAD,CAAMwC,GAAIxC,EAAMF,GAAItH,UAAS,uBAKrC,SAACU,EAAMuJ,GAAP,OACEvJ,EAAKC,aAAesJ,EAAKtJ,YACzBD,EAAKE,gBAAkBqJ,EAAKrJ,eAC5BF,EAAKwH,aAAe+B,EAAK/B,c,gBE7FhBgC,EAAmC,CAC9CC,aAAc,EACdC,cAAc,EACdC,UAAW,SACXC,UAAU,EACVC,iBAAiB,EACjBC,SAAU,EACVC,WAAW,GnBIPC,GAAiC,GAajCC,GAAgB,SAACpF,GACjBlG,GAAekG,IACjBmF,GAAWE,KAAKrF,GACZmF,GAAWG,SAAWpD,EAAOoD,QAbN,SAACtF,GAC9BlG,EAAYyL,GAAG,UAAU,SAACC,GACT1L,EAAYsI,OACpBqD,SAAQ,SAACnK,EAAO4C,GACrB,IAAIwH,GAAmD,IAAvCpK,EAAK,OAAaxB,EAAW,GAAe,EAC5DkG,EAAO9B,GAAGhC,MAAMgI,UAAY,cAAgBwB,EAAS,wBAQdC,CAAuBR,MAI9DS,GAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACb/J,EAAa0B,qBAAWhC,GAAxBM,SAD2B,EAEjBgK,mBAAS,OAFQ,mBAE5B1I,EAF4B,KAEzB2I,EAFyB,OAGOD,mBAAS,GAHhB,mBAG5BE,EAH4B,KAGbC,EAHa,KAI7BC,EAAkB,IAAIC,IAEtBC,EAAsB,SAACxL,GAAD,OAAWsL,EAAgBzB,KAAK7J,IAEtDyL,EAAe,kBAAMR,EAAQT,KAAK,MAmDxC,OAhDArE,qBAAU,WACRjF,EAAS,CAAEhB,KAAM,WAAYG,QAAQ,eAAM2K,KAC3C,IAAIU,GAAeV,EAAM7D,OAAOD,GAC5BjI,IACFA,EAAW,QAAYoL,UAAYqB,EACnCzM,EAAW,qBAEZ,CAAC+L,EAAM7D,OAAOD,GAAIhG,EAAU8J,IAG/B7E,qBAAU,WACR,GAAIlH,EAAa,CACf,IAAM0M,EAAe,IAAIC,IAAgB,GACnCC,EAAQF,EAAaG,KAAKC,YAAa,KAAKC,WAAU,SAACC,GAAO,IAAD,EAE7DzJ,EAAC,UADWvD,EAAW,OACToC,MAAMgI,iBAAnB,aAAG,EAA2B6C,QAAQ,WAAY,IACvDf,EAAK3I,GACLK,QAAQC,IAAIN,MAER2J,EAAQ,SAACxB,GACbgB,EAAa9B,KAAKc,IAIpB,OADA1L,EAAYyL,GAAG,SAAUyB,GAClB,WACLlN,EAAYmN,IAAI,SAAUD,GAC1BN,EAAMQ,kBAGT,IAGHlG,qBAAU,WACRlH,EAAYyL,GAAG,YAAY,SAAU4B,GACnC,IAAM9G,EAAM8G,EAAMC,OAClB1J,QAAQC,IAAIwJ,EAAMpM,KAAMsF,EAAInB,QAE9BpF,EAAYyL,GAAG,UAAU,SAAU8B,GACjCnB,EAAiBmB,QAElB,IAEHrG,qBAAU,WACRmF,EAAgBQ,KAAKW,eAAST,WAAU,SAACC,GACvC/K,EAAS,CAAEhB,KAAM,gBAAiBG,QAAS4L,SAE5C,CAACX,EAAiBpK,IAGnB,8BACE,kBAAC,IAAD,CACEjC,YAAa,SAACwG,GAAD,OAAUxG,EAAcwG,GACrC7F,UAAW,WACX8M,YAAa,MACbC,QAAS7C,GAERzC,EAAOlE,KAAI,SAACiE,EAAc/D,GAAf,OACV,kBAAC,EAAD,CACE+D,MAAOA,EACP9D,IAAK8D,EAAMF,GACXW,SAAU0C,GACVhK,WAAYyK,EAAM7D,OAAOD,KAAOE,EAAMF,GACtC0F,UAAU,EACV9E,WAAYtF,EACZhC,cAAe4K,IAAkB/H,EACjC0E,aAAcyD,EACd1G,MAAO2G,UAcJoB,GANG,kBAChB,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,CAAO1M,KAAM,CAAC,OAAQ,KAAM2M,UAAWhC,OoB1G5BiC,I,MAZF,SAAC1N,GAAD,OACX,uCAAKC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,IAAQH,GACpD,0BACEI,EAAE,wZACFC,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,eCKImN,GAZA,SAAC3N,GAAD,OACb,qCAAKC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,IAAQH,GACpD,wBACEI,EAAE,suBACFC,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,cCYIoN,GAnBD,SAAC5N,GAAD,OACZ,qCAAKC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,IAAQH,GACpD,wBACEI,EAAE,4RACFC,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,YAEP,wBACEH,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,UACLJ,EAAE,oFCFOyN,GAZF,SAAC7N,GAAD,OACX,qCAAKC,QAAQ,cAAcC,MAAO,GAAIC,OAAQ,IAAQH,GACpD,wBACEI,EAAE,obACFC,gBAAc,UACdC,UAAU,sBACVC,iBAAe,UACfC,KAAK,cCsBIsN,GApBA,WAAO,IAEZ1M,EADUkC,qBAAWhC,GAArBZ,MACAU,WACR,OACE,4BAAQW,MAAO,CAAEgM,SAAU,WACzB,kBAAC,IAAO7J,IAAR,CACE5D,UAAU,mBACVqD,QAASvC,EAAa,UAAY,SAClCyB,WAAYzB,EAAaa,EAAaG,EACtCwB,SAAUtB,GAEV,kBAAC0L,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,SCVOC,GARH,kBACV,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCCgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3C,MACvB,2DCNN,GAFA4C,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SAHjB,qBAAvBN,OAAOO,cAC+B,IAA7CC,UAAUC,UAAUC,QAAQ,YAIR,CACpB,IAAIC,GAA0B,IAArBX,OAAOY,YAChBP,SAASQ,gBAAgBjN,MAAMkN,YAAY,OAA3C,UAAsDH,GAAtD,OAEAX,OAAOe,iBAAiB,UAAU,WAChC,IAAIJ,EAA0B,IAArBX,OAAOY,YAChBP,SAASQ,gBAAgBjN,MAAMkN,YAAY,OAA3C,UAAsDH,EAAtD,UDsHE,kBAAmBH,WACrBA,UAAUQ,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNlM,QAAQkM,MAAMA,EAAMC,c","file":"static/js/main.ca1e981b.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport Flickity from \"react-flickity-component\"\nimport { BehaviorSubject, Subject } from \"rxjs\"\nimport { first, debounceTime } from \"rxjs/operators\"\nimport \"./Main.scss\"\nimport \"styles/flickity.css\"\nimport Card from \"components/Card/Card\"\nimport spaces from \"model/spaceList.json\"\nimport { Route, HashRouter } from \"react-router-dom\"\nimport { store } from \"store/store\"\nimport { flickityOptions } from \"utils/flickity-conf\"\nimport { Space } from \"model/interface\"\n\nconst imgRefList: HTMLImageElement[] = []\nlet flickityRef: Flickity\n\nconst flkityParallaxOnScroll = (imgRef) => {\n  flickityRef.on(\"scroll\", (e) => {\n    const slides = flickityRef.slides as Array<any>\n    slides.forEach((slide, i) => {\n      let offset = (+(slide[\"target\"] + flickityRef[\"x\"]) * -1) / 3\n      imgRef[i].style.transform = \"translateX(\" + offset + \"px) scale(1.3) \"\n    })\n  })\n}\n\nconst scrollHandler = (imgRef: HTMLImageElement) => {\n  if (flickityRef && imgRef) {\n    imgRefList.push(imgRef)\n    if (imgRefList.length === spaces.length) flkityParallaxOnScroll(imgRefList)\n  }\n}\n\nconst Main = ({ match, history }) => {\n  const { dispatch } = useContext(store)\n  const [x, setX] = useState(20.71)\n  const [SelectedIndex, setSelectedIndex] = useState(0)\n  const navBarToggleObs = new Subject<boolean>()\n\n  const navBarTogglehandler = (state) => navBarToggleObs.next(state)\n\n  const closeHandler = () => history.push(\"/\")\n\n  // set draggable state\n  useEffect(() => {\n    dispatch({ type: \"NAVIGATE\", payload: { ...match } })\n    let isDraggable = !match.params.id\n    if (flickityRef) {\n      flickityRef[\"options\"].draggable = isDraggable\n      flickityRef[\"updateDraggable\"]()\n    }\n  }, [match.params.id, dispatch, match])\n\n  // calculate translateX distance\n  useEffect(() => {\n    if (flickityRef) {\n      const eventHandler = new BehaviorSubject(0)\n      const unSub = eventHandler.pipe(debounceTime(50)).subscribe((v) => {\n        let sliderRef = flickityRef[\"slider\"]\n        let x = sliderRef.style.transform?.replace(/[^\\d-.]/g, \"\")\n        setX(x)\n        console.log(x)\n      })\n      const calcX = (e) => {\n        eventHandler.next(e)\n      }\n\n      flickityRef.on(\"scroll\", calcX)\n      return () => {\n        flickityRef.off(\"scroll\", calcX)\n        unSub.unsubscribe()\n      }\n    }\n  }, [])\n\n  // lazy load images & get current selected slide index\n  useEffect(() => {\n    flickityRef.on(\"lazyLoad\", function (event) {\n      const img = event.target\n      console.log(event.type, img.src)\n    })\n    flickityRef.on(\"select\", function (index) {\n      setSelectedIndex(index)\n    })\n  }, [])\n\n  useEffect(() => {\n    navBarToggleObs.pipe(first()).subscribe((v) => {\n      dispatch({ type: \"TOGGLE NAVBAR\", payload: v })\n    })\n  }, [navBarToggleObs, dispatch])\n\n  return (\n    <main>\n      <Flickity\n        flickityRef={(ref) => (flickityRef = ref)}\n        className={\"carousel\"}\n        elementType={\"div\"}\n        options={flickityOptions}\n      >\n        {spaces.map((space: Space, i) => (\n          <Card\n            space={space}\n            key={space.id}\n            onScroll={scrollHandler}\n            isSelected={match.params.id === space.id}\n            isDetail={false}\n            translateX={x}\n            selectedIndex={SelectedIndex === i}\n            navBarToggle={navBarTogglehandler}\n            close={closeHandler}\n          />\n        ))}\n      </Flickity>\n    </main>\n  )\n}\n\nconst MainRoute = () => (\n  <HashRouter basename=\"/\">\n    <Route path={[\"/:id\", \"/\"]} component={Main} />\n  </HashRouter>\n)\n\nexport default MainRoute\n","export const navData = [\n  { title: \"spaces\", href: \"#\" },\n  { title: \"prototypes\", href: \"#\" },\n  { title: \"boards\", href: \"#\" },\n  { title: \"favorites\", href: \"#\" },\n]\n","import * as React from \"react\"\n\nconst Search = props => (\n  <svg viewBox=\"0 0 451 451\" width={18} height={18} {...props}>\n    <path\n      d=\"M447.028 427.98l-109.59-109.59c29.398-33.796 47.196-77.891 47.196-126.087 0-106.09-86.291-192.28-192.28-192.28C86.263.023.072 86.313.072 192.303s86.29 192.281 192.28 192.281c48.195 0 92.291-17.798 126.088-47.195L428.03 446.978c2.6 2.6 6.1 4 9.499 4s6.9-1.3 9.499-4c5.2-5.2 5.2-13.799 0-18.998zM26.97 192.303c0-91.19 74.192-165.283 165.283-165.283 91.191 0 165.284 74.192 165.284 165.283s-74.093 165.384-165.284 165.384c-91.09 0-165.283-74.193-165.283-165.384z\"\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#AEAEAE\"\n    />\n  </svg>\n)\n\nexport default Search\n","import { Reducer, Dispatch } from \"react\"\ninterface Actions {\n  type: string\n  payload: any\n}\n\nexport interface State {\n  route: {\n    path?: {\n      isExact: boolean\n      params: {\n        [key: string]: string\n      }\n      path: string\n      url: string\n    }\n    prev?: {\n      isExact: boolean\n      params: {\n        [key: string]: string\n      }\n      path: string\n      url: string\n    }\n  }\n  slide: {\n    isSelected: boolean\n    selectedIndex: number\n  }\n  showNavBar: boolean\n}\n\nexport interface InitContextProps {\n  state: State\n  dispatch: Dispatch<Actions>\n}\n\nexport const reducer: Reducer<State, Actions> = (state, action) => {\n  switch (action.type) {\n    case \"NAVIGATE\":\n      return {\n        ...state,\n        route: {\n          ...state.route,\n          path: action.payload,\n          prev: state.route.path,\n        },\n      }\n    case \"SET CARD STATE\":\n      const { isSelected, selectedIndex } = action.payload\n      return {\n        ...state,\n        slide: {\n          ...state.slide,\n          isSelected,\n          selectedIndex,\n        },\n      }\n    case \"TOGGLE NAVBAR\":\n      return {\n        ...state,\n        showNavBar: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","import { InitContextProps } from \"./reducer\"\nimport React, { createContext, useReducer } from \"react\"\nimport { reducer, State } from \"store/reducer\"\nimport { motion } from \"framer-motion\"\n\nconst initialState: State = {\n  route: {},\n  slide: {\n    isSelected: false,\n    selectedIndex: 0,\n  },\n  showNavBar: true,\n}\nconst store = createContext({} as InitContextProps)\nconst { Provider } = store\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <Provider value={{ state, dispatch }}>\n      <motion.section\n        className=\"App-container\"\n        style={{\n          gridTemplateRows: !state.showNavBar\n            ? `0 minmax(400px, 1fr) 0`\n            : `95px minmax(400px, 1fr) 95px`,\n        }}\n      >\n        {children}\n      </motion.section>\n    </Provider>\n  )\n}\n\nexport { store, StateProvider }\n","import { Transition, Variants, VariantLabels } from \"framer-motion\"\n\nexport interface Animations {\n  variants?: Variants\n  initial?: VariantLabels | string\n  animate?: VariantLabels | string\n  exit?: VariantLabels | string\n  transition?: Transition\n}\n\nexport const openSpring = {\n  type: \"spring\",\n  stiffness: 200,\n  damping: 30,\n}\nexport const closeSpring = {\n  type: \"spring\",\n  stiffness: 300,\n  damping: 35,\n}\nexport const closeInertial = {\n  type: \"spring\",\n  stiffness: 500,\n  damping: 50,\n}\n","export interface Variants {\n  [key: string]: Object\n}\n\nexport const tabBarVariants: Variants = {\n  hidden: {\n    y: 100,\n    opacity: 0,\n  },\n  visible: {\n    y: 0,\n    opacity: 1,\n  },\n}\n\nexport const navBarVariants: Variants = {\n  hidden: {\n    y: -100,\n  },\n  visible: { y: 0 },\n}\n\nexport const closeBtnVariants: Variants = {\n  hidden: {\n    opacity: 0,\n    y: -100,\n  },\n  visible: { y: 0, opacity: 1, transition: { delay: 0.4, duration: 0.3 } },\n}\n\nexport const infoWrapperVariants: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: { delay: 0.5 },\n  },\n}\n\nexport const infoVariants: Variants = {\n  hidden: {\n    opacity: 0,\n    y: 25,\n  },\n  visible: { y: 0, opacity: 1, transition: { duration: 0.4, delay: 0.5 } },\n}\n\nexport const flicktyVariants: Variants = {\n  hidden: {\n    opacity: 0,\n    x: \"100%\",\n  },\n  visible: { opacity: 1, x: 0, transition: { delay: 0.5, duration: 0.4 } },\n}\n\nexport const ImageVariants: Variants = {\n  hidden: {\n    height: 450,\n  },\n  visible: { height: 304 },\n}\n","import React, { useContext } from \"react\"\nimport \"./Nav.scss\"\nimport { navData } from \"model/navdata\"\nimport Search from \"icons/Search\"\nimport { motion } from \"framer-motion\"\nimport { store } from \"store/store\"\nimport { openSpring, closeSpring } from \"utils/animation\"\nimport { navBarVariants } from \"utils/variants\"\n\nconst Nav = ({ selected = 0 }) => {\n  const { state } = useContext(store)\n  console.log(\"nav state:::\", state.showNavBar)\n\n  return (\n    <motion.nav\n      initial=\"false\"\n      animate={!state.showNavBar ? \"hidden\" : \"visible\"}\n      transition={!state.showNavBar ? openSpring : closeSpring}\n      variants={navBarVariants}\n    >\n      <ul className=\"Nav-container\">\n        {navData.map((n, i) => (\n          <li\n            key={i}\n            className={`Nav-list ${i === selected ? \"Nav-active\" : \"\"}`}\n          >\n            <a\n              className={`Nav-item ${i === selected ? \"Nav-active-text\" : \"\"}`}\n              href={n.href}\n            >\n              {n.title}\n            </a>\n          </li>\n        ))}\n        <li className=\"Nav-list\">\n          <Search />\n        </li>\n      </ul>\n    </motion.nav>\n  )\n}\n\nexport default Nav\n","import React, { Props } from \"react\"\nimport \"./Info.scss\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { infoWrapperVariants } from \"utils/variants\"\nimport { InfoType } from \"model/interface\"\n\nconst InfoWrapper = (props: Props<{}>) => (\n  <div className=\"Card-info-wrapper\">\n    <motion.div\n      className=\"Card-info\"\n      variants={infoWrapperVariants}\n      initial={\"hidden\"}\n      animate={\"visible\"}\n      exit={\"hidden\"}\n    >\n      {props.children}\n    </motion.div>\n  </div>\n)\n\nconst TitleWrapper = (props: Props<{}>) => (\n  <div className=\"Card-desc-title\">\n    <AnimatePresence exitBeforeEnter>{props.children}</AnimatePresence>\n  </div>\n)\n\nconst Info: React.FC<Partial<InfoType>> = ({\n  title,\n  description,\n  style,\n  isDescTitle = false,\n  thumbs = null,\n  animation,\n}) => {\n  const content = (\n    <>\n      <motion.div {...animation}>\n        <h2 className=\"Card-title\" style={style?.title}>\n          {title}\n        </h2>\n        <div className=\"Card-sub\" style={style?.sub}>\n          {`${description?.count} ${description?.type}${\n            description && description?.count > 1 && \"s\"\n          }`}\n        </div>\n      </motion.div>\n      {!!thumbs &&\n        thumbs.map(\n          (thumb, i) =>\n            i < 3 && (\n              <span className={\"Card-thumb Card-thumb__\" + i} key={i}>\n                <img src={thumb.image} alt={thumb.name} />\n              </span>\n            )\n        )}\n    </>\n  )\n\n  return !isDescTitle ? (\n    <InfoWrapper>{content}</InfoWrapper>\n  ) : (\n    <TitleWrapper>{content}</TitleWrapper>\n  )\n}\n\nexport default Info\n","import * as React from \"react\"\nimport { motion } from \"framer-motion\"\n\nconst Path = (props) => (\n  <motion.path\n    fill=\"transparent\"\n    strokeWidth=\"3\"\n    stroke=\"hsla(360, 100%, 100%, 0.6)\"\n    strokeLinecap=\"round\"\n    {...props}\n  />\n)\n\nexport default Path\n","import * as React from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { closeInertial } from \"utils/animation\"\nimport { closeBtnVariants } from \"utils/variants\"\nimport Path from \"icons/Close\"\nimport \"./CloseBtn.scss\"\n\nconst CloseBtn = ({ close }) => {\n  return (\n    <AnimatePresence exitBeforeEnter>\n      <motion.button\n        onClick={close}\n        className=\"close\"\n        variants={closeBtnVariants}\n        initial={\"hidden\"}\n        animate={\"visible\"}\n        exit={\"hidden\"}\n        transition={closeInertial}\n      >\n        <svg width=\"23\" height=\"23\" viewBox=\"0 0 23 23\">\n          <Path d=\"M 3 16.5 L 17 2.5\" />\n          <Path d=\"M 3 2.5 L 17 16.346\" />\n        </svg>\n      </motion.button>\n    </AnimatePresence>\n  )\n}\n\nexport default CloseBtn\n","import React from \"react\"\nimport { motion, useInvertedScale } from \"framer-motion\"\nimport { ImageVariants } from \"utils/variants\"\nimport { closeSpring, openSpring } from \"utils/animation\"\nimport { CardImageType } from \"model/interface\"\nimport \"./CardImage.scss\"\n\nconst CardImage: React.FC<Partial<CardImageType>> = ({\n  bgImage,\n  imgRef,\n  isSelected = false,\n  animate = false,\n}) => {\n  const inverted = useInvertedScale()\n\n  return (\n    <motion.div\n      className=\"Card-image\"\n      style={{ ...inverted, originX: 0, originY: 0 }}\n      variants={ImageVariants}\n      animate={animate ? \"visible\" : isSelected ? \"hidden\" : \"visible\"}\n      transition={isSelected ? openSpring : closeSpring}\n    >\n      <motion.img\n        // data-flickity-lazyload={bgImage}\n        src={bgImage}\n        alt=\"\"\n        ref={imgRef}\n        initial={false}\n        transition={closeSpring}\n      />\n    </motion.div>\n  )\n}\n\nexport default CardImage\n","import React, { createContext, Dispatch, useReducer } from \"react\"\n\ntype IState = {\n  items: number[]\n  activeItem: number\n  doneAnimation: boolean\n}\ntype ActionType =\n  | { type: \"ADD_ITEM\"; item: number }\n  | { type: \"SET_ACTIVE_ITEM\"; activeItem: number }\n  | { type: \"SET_ANIMATION_STATE\"; doneAnimation: boolean }\n\ntype ContextType = {\n  state: IState\n  dispatch: Dispatch<ActionType>\n}\n\nexport const sliderContext = createContext({} as ContextType)\n\nexport const ContextProvider = ({ children }) => {\n  const initialState = {\n    items: [],\n    activeItem: 0,\n    doneAnimation: false,\n  }\n\n  function reducer(state: IState, action: ActionType) {\n    switch (action.type) {\n      case \"ADD_ITEM\":\n        return {\n          ...state,\n          items: [...state.items, action.item],\n        }\n      case \"SET_ACTIVE_ITEM\":\n        return {\n          ...state,\n          activeItem: action.activeItem,\n        }\n      case \"SET_ANIMATION_STATE\":\n        return {\n          ...state,\n          doneAnimation: action.doneAnimation,\n        }\n      default:\n        return initialState\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <sliderContext.Provider value={{ state, dispatch }}>\n      {children}\n    </sliderContext.Provider>\n  )\n}\n","import React, { useContext, useEffect, useRef } from \"react\"\nimport CardImage from \"ui/CardImage/CardImage\"\nimport Info from \"ui/CardInfo/Info\"\nimport { Slide } from \"model/interface\"\nimport \"./InnerCard.scss\"\nimport { sliderContext } from \"components/MotionSlider/Context\"\n\nconst InnerCard: React.FC<{ slide: Slide }> = ({ slide }) => {\n  const { state, dispatch } = useContext(sliderContext)\n  const animationState = state.doneAnimation\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (ref && ref.current && animationState) {\n      console.log(ref.current)\n      const x = ref.current.getBoundingClientRect().x\n      dispatch({ type: \"ADD_ITEM\", item: x - 112 })\n    }\n  }, [animationState, dispatch])\n  return (\n    <div className=\"Card-container\" ref={ref}>\n      <div className=\"Card\">\n        <div className=\"Card-content\">\n          <CardImage bgImage={slide?.bg_image} animate={true} />\n          <Info\n            title={slide.title}\n            description={slide.description}\n            style={{}}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default InnerCard\n","import { motion, useAnimation, useInvertedScale } from \"framer-motion\"\nimport React, { useContext, useEffect } from \"react\"\nimport { openSpring } from \"utils/animation\"\nimport { flicktyVariants } from \"utils/variants\"\nimport { sliderContext } from \"./Context\"\n\nconst Track = ({ children }) => {\n  const { state, dispatch } = useContext(sliderContext)\n  const controls = useAnimation()\n  const inverted = useInvertedScale()\n  console.log(state.items)\n  const negativeItems = state.items.map((item) => item * -1)\n\n  useEffect(() => {\n    controls.start(\"visible\")\n  }, [controls])\n\n  const onComplete = () => {\n    dispatch({ type: \"SET_ANIMATION_STATE\", doneAnimation: true })\n  }\n\n  function onDragEnd(event, info) {\n    // console.log(info)\n    const offset = info.offset.x\n    const correctedVelocity = info.velocity.x * 0.3\n\n    const direction = correctedVelocity < 0 || offset < 0 ? 1 : -1\n    const startPosition = info.point.x - offset\n\n    const endOffset = offset\n    direction === 1\n      ? Math.min(correctedVelocity, offset)\n      : Math.max(correctedVelocity, offset)\n    const endPosition = startPosition + endOffset\n\n    const closestPosition = negativeItems.reduce((prev, curr) =>\n      Math.abs(curr - endPosition) < Math.abs(prev - endPosition) ? curr : prev\n    )\n\n    console.log(closestPosition)\n\n    const activeSlide = negativeItems.indexOf(closestPosition)\n\n    dispatch({ type: \"SET_ACTIVE_ITEM\", activeItem: activeSlide })\n\n    controls.start({\n      x: closestPosition + 112,\n      transition: openSpring,\n    })\n  }\n  return (\n    <motion.div\n      className=\"Flickity-container\"\n      variants={flicktyVariants}\n      drag={\"x\"}\n      //   onDragEnd={onDragEnd}\n      dragConstraints={{\n        left: -(1000 / 1.5),\n        right: 0,\n      }}\n      style={{ ...inverted }}\n      initial={\"hidden\"}\n      animate={\"visible\"}\n      exit={\"hidden\"}\n      transition={openSpring}\n      onAnimationComplete={onComplete}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\nexport default Track\n","import React from \"react\"\nimport { ContextProvider } from \"./Context\"\nimport Track from \"./Track\"\n\nconst MotionSlider = ({ children }) => {\n  return (\n    <ContextProvider>\n      <Track>{children}</Track>\n    </ContextProvider>\n  )\n}\n\nexport default MotionSlider\n","import React, { useContext } from \"react\"\nimport \"./Detail.scss\"\nimport spaces from \"model/spaceItem.json\"\nimport Info from \"ui/CardInfo/Info\"\nimport { store } from \"store/store\"\nimport CloseBtn from \"ui/CloseBtn/CloseBtn\"\nimport { InfoType, Slide } from \"model/interface\"\nimport InnerCard from \"components/InnerCard/InnerCard\"\nimport MotionSlider from \"components/MotionSlider\"\nimport { infoVariants } from \"utils/variants\"\nimport { closeInertial } from \"utils/animation\"\n\nconst Detail = ({ close }) => {\n  const { route } = useContext(store).state\n  const id = route.path?.params.id ?? 0\n  const space = spaces[id]\n\n  return (\n    <>\n      <CloseBtn close={close} />\n      <Info\n        title={space?.title}\n        description={space?.description}\n        {...infoProps}\n      />\n      <MotionSlider>\n        {spaces[id].slides.map((slide: Slide, i) => (\n          <InnerCard slide={space.slides[i]} key={i} />\n        ))}\n      </MotionSlider>\n    </>\n  )\n}\n\nexport default Detail\n\nconst infoProps: Partial<InfoType> = {\n  style: {\n    title: {\n      fontSize: 24,\n      letterSpacing: 0.8,\n      color: \"#c0c0c0\",\n    },\n    sub: {\n      fontSize: 13,\n      opacity: 0.8,\n    },\n  },\n  isDescTitle: true,\n  animation: {\n    variants: infoVariants,\n    initial: \"hidden\",\n    animate: \"visible\",\n    exit: \"hidden\",\n    transition: closeInertial,\n  },\n}\n","import React, { useEffect, useRef, useContext, memo } from \"react\"\nimport { motion, useMotionValue } from \"framer-motion\"\nimport { Link } from \"react-router-dom\"\nimport \"./Card.scss\"\nimport { openSpring, closeSpring } from \"utils/animation\"\nimport { store } from \"store/store\"\nimport { useInvertedBorderRadius } from \"utils/use-inverted-scale\"\nimport Info from \"ui/CardInfo/Info\"\nimport Detail from \"containers/Details/Detail\"\nimport { CardType } from \"model/interface\"\nimport CardImage from \"ui/CardImage/CardImage\"\n\nconst Card: React.FC<CardType> = memo(\n  ({\n    space,\n    isSelected = false,\n    onScroll,\n    translateX,\n    selectedIndex,\n    navBarToggle,\n    close,\n  }) => {\n    const { dispatch } = useContext(store)\n    const imgRef = useRef(null)\n    const zIndex = useMotionValue(isSelected ? 2 : 0)\n    const inverted = useInvertedBorderRadius(isSelected ? 0 : 10)\n\n    useEffect(() => {\n      onScroll(imgRef.current)\n    }, [onScroll])\n\n    useEffect(() => {\n      dispatch({\n        type: \"SET CARD STATE\",\n        payload: { isSelected, selectedIndex },\n      })\n    }, [dispatch, isSelected, selectedIndex])\n\n    const checkZIndex = (latest) => {\n      const scaleX = Math.round(latest.scaleX * 100) / 100\n      if (isSelected) {\n        zIndex.set(2)\n        navBarToggle(false)\n      } else {\n        if (!isSelected && scaleX < 1.01) {\n          zIndex.set(0)\n        }\n        if (scaleX < 1.2 && scaleX > 1) {\n          navBarToggle(true)\n        }\n      }\n    }\n\n    return (\n      <motion.div className=\"Card-container\">\n        <motion.div\n          className={`Card ${isSelected && \"open\"}`}\n          style={{\n            transform: isSelected ? `translateX(${-1 * translateX}%)` : \"\",\n          }}\n        >\n          <motion.div\n            className=\"Card-content\"\n            style={{ ...inverted, zIndex }}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            onUpdate={checkZIndex}\n          >\n            <CardImage\n              bgImage={space?.bg_image}\n              isSelected={isSelected}\n              imgRef={imgRef}\n              animate={false}\n            />\n            {isSelected ? (\n              <Detail close={close} />\n            ) : (\n              <Info\n                title={space?.title}\n                description={space?.description}\n                thumbs={space?.face_thumbs}\n                style={{}}\n                animation={{}}\n              />\n            )}\n          </motion.div>\n        </motion.div>\n        {!isSelected && selectedIndex && space && (\n          <Link to={space.id} className={`Card-open-link`} />\n        )}\n      </motion.div>\n    )\n  },\n  (prev, next) =>\n    prev.isSelected === next.isSelected &&\n    prev.selectedIndex === next.selectedIndex &&\n    prev.translateX === next.translateX\n)\n\nexport default Card\n","import { useMotionValue, useInvertedScale } from \"framer-motion\"\nimport { useEffect } from \"react\"\n\nexport const useInvertedBorderRadius = (radius: number) => {\n  const scaleX = useMotionValue(1)\n  const scaleY = useMotionValue(1)\n  const inverted = useInvertedScale({ scaleX, scaleY })\n  const borderRadius = useMotionValue(`${radius}px`)\n\n  useEffect(() => {\n    function updateRadius() {\n      const latestX = inverted.scaleX.get()\n      const latestY = inverted.scaleY.get()\n      const xRadius = latestX * radius + \"px\"\n      const yRadius = latestY * radius + \"px\"\n\n      borderRadius.set(`${xRadius} ${yRadius}`)\n    }\n\n    const unsubScaleX = inverted.scaleX.onChange(updateRadius)\n    const unsubScaleY = inverted.scaleY.onChange(updateRadius)\n\n    return () => {\n      unsubScaleX()\n      unsubScaleY()\n    }\n  }, [radius, borderRadius, inverted.scaleX, inverted.scaleY])\n\n  return {\n    scaleX,\n    scaleY,\n    borderTopLeftRadius: borderRadius,\n    borderTopRightRadius: borderRadius,\n    borderBottomLeftRadius: borderRadius,\n    borderBottomRightRadius: borderRadius,\n  }\n}\n","import { FlickityOptions } from \"react-flickity-component\"\n\nexport const flickityOptions: FlickityOptions = {\n  initialIndex: 0,\n  imagesLoaded: true,\n  cellAlign: \"center\",\n  pageDots: false,\n  prevNextButtons: false,\n  lazyLoad: 3,\n  draggable: true,\n}\n\n// dragThreshold: 4,\n// selectedAttraction: 0.15,\n// friction: 0.8,\n","import React from \"react\"\n\nconst Logo = (props) => (\n  <svg viewBox=\"0 0 512 512\" width={26} height={26} {...props}>\n    <path\n      d=\"M385.746.015H126.244L0 172.027l255.697 339.959L512 172.042 385.746.015zm-20.244 39.968l82.135 111.913h-92.741L316.283 39.983h49.219zm-130.888 0h39.388l38.613 111.913H197.472l37.142-111.913zm-88.126 0H192.5l-37.14 111.913H64.353l82.135-111.913zM64.935 191.865h89.692l53.198 189.977-142.89-189.977zm190.669 212.383l-59.472-212.384h118.251l-58.779 212.384zm47.391-21.386l52.861-190.997h91.14L302.995 382.862z\"\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#AEAEAE\"\n    />\n  </svg>\n)\n\nexport default Logo\n","import * as React from \"react\"\n\nconst Folder = (props) => (\n  <svg viewBox=\"0 0 512 512\" width={26} height={26} {...props}>\n    <path\n      d=\"M494.426 105.573c-11.332-11.33-26.396-17.569-42.416-17.569h-.011L258.297 88h-.04c-5.41 0-10.375-2.605-13.288-6.973l-30.71-46.064H60c-33.084 0-60 26.916-60 60v322.074c0 33.084 26.916 60 60 60h392c33.084 0 60-26.916 60-60V148c0-16.027-6.241-31.095-17.574-42.427zM40 94.963c0-11.028 8.972-20 20-20h132.853l18.835 28.253a55.848 55.848 0 003.689 4.922 55.487 55.487 0 00-3.608 4.794l-19.291 28.069-132.467.006h-.012A60.073 60.073 0 0040 144.405V94.963zm432 322.074c0 11.028-8.972 20-20 20H60c-11.028 0-20-8.972-20-20v-216.03a19.874 19.874 0 015.859-14.144 19.873 19.873 0 0114.145-5.856h.004l153.515-.008 31.285-45.519.158-.233C247.811 130.98 253.171 128 258 128h.346l193.657.004a19.862 19.862 0 0114.14 5.855A19.867 19.867 0 01472 148v269.037z\"\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#ea4c89\"\n    />\n  </svg>\n)\n\nexport default Folder\n","import * as React from \"react\"\n\nconst Inbox = (props) => (\n  <svg viewBox=\"0 0 512 512\" width={26} height={26} {...props}>\n    <path\n      d=\"M472 195v126H308v20c0 28.673-23.327 52-52 52s-52-23.327-52-52l-.004-20H40V195H0v257c0 33.084 26.916 60 60 60h392c33.084 0 60-26.916 60-60V195h-40zm0 257c0 11.028-8.972 20-20 20H60c-11.028 0-20-8.972-20-20v-91h126.189c9.157 41.143 45.949 72 89.811 72s80.653-30.857 89.811-72H472v91z\"\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#AEAEAE\"\n    />\n    <path\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#AEAEAE\"\n      d=\"M352 115.716l-76 76V0h-40v191.716l-76-76L131.716 144 256 268.284 380.284 144z\"\n    />\n  </svg>\n)\n\nexport default Inbox\n","import * as React from \"react\"\n\nconst User = (props) => (\n  <svg viewBox=\"0 0 512 512\" width={26} height={26} {...props}>\n    <path\n      d=\"M437.02 330.98c-27.883-27.882-61.071-48.523-97.281-61.018C378.521 243.251 404 198.548 404 148 404 66.393 337.607 0 256 0S108 66.393 108 148c0 50.548 25.479 95.251 64.262 121.962-36.21 12.495-69.398 33.136-97.281 61.018C26.629 379.333 0 443.62 0 512h40c0-119.103 96.897-216 216-216s216 96.897 216 216h40c0-68.38-26.629-132.667-74.98-181.02zM256 256c-59.551 0-108-48.448-108-108S196.449 40 256 40s108 48.448 108 108-48.449 108-108 108z\"\n      data-original=\"#000000\"\n      className=\"prefix__active-path\"\n      data-old_color=\"#000000\"\n      fill=\"#AEAEAE\"\n    />\n  </svg>\n)\n\nexport default User\n","import React, { useContext } from \"react\"\nimport \"./TabBar.scss\"\nimport Diamonds from \"icons/Diamonds\"\nimport Folder from \"icons/Folder\"\nimport Inbox from \"icons/Inbox\"\nimport User from \"icons/User\"\nimport { motion } from \"framer-motion\"\nimport { store } from \"store/store\"\nimport { openSpring, closeSpring } from \"utils/animation\"\nimport { tabBarVariants } from \"utils/variants\"\n\nconst TabBar = () => {\n  const { state } = useContext(store)\n  const { showNavBar } = state\n  return (\n    <footer style={{ overflow: \"hidden\" }}>\n      <motion.div\n        className=\"Footer-contianer\"\n        animate={showNavBar ? \"visible\" : \"hidden\"}\n        transition={showNavBar ? openSpring : closeSpring}\n        variants={tabBarVariants}\n      >\n        <Diamonds />\n        <Folder />\n        <Inbox />\n        <User />\n      </motion.div>\n    </footer>\n  )\n}\n\nexport default TabBar\n","import React from \"react\"\nimport \"./App.scss\"\nimport Nav from \"components/Nav/Nav\"\nimport Main from \"containers/Main/Main\"\nimport TabBar from \"components/TabBar/TabBar\"\nimport { StateProvider } from \"store/store\"\n\nconst App = () => (\n  <StateProvider>\n    <Nav />\n    <Main />\n    <TabBar />\n  </StateProvider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst isMobileDevice = () =>\n  typeof window.orientation !== \"undefined\" ||\n  navigator.userAgent.indexOf(\"IEMobile\") !== -1\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nif (isMobileDevice()) {\n  let vh = window.innerHeight * 0.01\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`)\n\n  window.addEventListener(\"resize\", () => {\n    let vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`)\n  })\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}